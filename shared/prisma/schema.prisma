// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Manifest {
  id Int @id @default(autoincrement())
  version String
}

model LostSectorDay {
  id Int @id @default(autoincrement())
  name String
  activity Activity @relation(fields: [activityHash], references: [hash])
  activityHash Int @db.UnsignedInt
  startsAt DateTime
  endsAt DateTime
  rewards Collectible[]
}

model NightfallWeek {
  id Int @id @default(autoincrement())
  name String
  activity Activity @relation(fields: [activityHash], references: [hash])
  activityHash Int @db.UnsignedInt
  startsAt DateTime
  endsAt DateTime
  difficulty String
}

model Activity {
  hash Int @id @db.UnsignedInt
  name String? @db.Text
  detailedName String? @db.Text
  description String? @db.Text
  lightLevel Int?
  pgcrImage String? @db.Text
  modifiers ActivityModifiersOnActivity[]
  directActivityModeType Int?
  lostSectorDays LostSectorDay[]
  nightfallWeeks NightfallWeek[]
}

model ActivityModifier {
  hash Int @id @db.UnsignedInt
  redacted Boolean? @default(false)
  displayInNavMode Boolean? @default(false)
  displayInActivitySelection Boolean? @default(false)
  blacklisted Boolean? @default(false)
  description String? @db.Text
  name String?
  icon String? @db.Text
  hasIcon Boolean? @default(false)
  highResIcon String?
  activities ActivityModifiersOnActivity[]
}

model ActivityModifiersOnActivity {
  id Int @id @default(autoincrement())
  activity Activity @relation(fields: [activityHash], references: [hash])
  activityHash Int @db.UnsignedInt
  activityModifier ActivityModifier @relation(fields: [activityModifierHash], references: [hash])
  activityModifierHash Int @db.UnsignedInt
  @@index ([activityHash, activityModifierHash], name: "activityHash_activityModifierHash")
  @@index ([activityModifierHash, activityHash], name: "activityModifierHash_activityHash")
}

model Class {
  hash Int @id @db.UnsignedInt
  redacted Boolean @default(false)
  classType Int
  blacklisted Boolean @default(false)
  description String
  name String
  icon String
  hasIcon Boolean
  highResIcon String
}


model Collectible {
  hash Int @id @db.UnsignedInt
  sourceHash Int? @db.UnsignedInt
  inventoryItem InventoryItem @relation(fields: [inventoryItemHash], references: [hash])
  inventoryItemHash Int @db.UnsignedInt
  lostSectorDays LostSectorDay[]


  @@index([inventoryItemHash, sourceHash], name: "inventoryItemHash_sourceHash")
}

model Vendor {
  hash Int @id @db.UnsignedInt
  name String? @db.Text
  description String? @db.Text
  icon String? @db.Text
  hasIcon Boolean? @default(false)
  largeIcon String? @db.Text
  mapIcon String? @db.Text
  specialImage String? @db.Text
  redacted Boolean? @default(false)
  blacklisted Boolean? @default(false)

}

model Stat {
  hash Int @id @db.UnsignedInt
  redacted Boolean? @default(false)
  aggregationType Int?
  hasComputedBlock Boolean? @default(false)
  blacklisted Boolean? @default(false)
  description String? @db.Text
  name String?
  icon String? @db.Text
  hasIcon Boolean? @default(false)
  highResIcon String?
  interpolate Boolean? @default(false)
  statCategory Int?
  inventoryItems StatsOnInventoryItem[]
}

model InventoryItem {
  hash Int @id @db.UnsignedInt @unique
  name String? @db.Text
  icon String? @db.Text
  hasIcon Boolean? @default(false)
  highResIcon String? @db.Text
  description String? @db.Text
  collectibleHash Int? @db.UnsignedInt
  screenshot String? @db.Text
  itemTypeDisplayName String? @db.Text
  flavorText String? @db.Text
  uiItemDisplayStyle String? @db.Text
  itemTypeAndTierDisplayName String? @db.Text
  displaySource String? @db.Text
  specialItemType Int?
  itemType Int?
  itemSubType Int?
  classType Int?
  breakerType Int?
  equippable Boolean? @default(false)
  defaultDamageType Int?
  isWrapper Boolean? @default(false)
  index Int?
  redacted Boolean? @default(false)
  blacklisted Boolean? @default(false)
  summaryItemHash Int? @db.UnsignedInt
  collectible Collectible[]
  stats StatsOnInventoryItem[]
}

model StatsOnInventoryItem {
  id Int @id @default(autoincrement())
  stat Stat @relation(fields: [statHash], references: [hash])
  statHash Int @db.UnsignedInt
  inventoryItem InventoryItem @relation(fields: [inventoryItemHash], references: [hash])
  inventoryItemHash Int @db.UnsignedInt

  @@index ([statHash, inventoryItemHash], name: "statHash_inventoryItemHash")
  @@index ([inventoryItemHash, statHash], name: "inventoryItemHash_statHash")
}
